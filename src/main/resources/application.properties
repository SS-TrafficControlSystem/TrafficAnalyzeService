spring.application.name=TrafficAnalyzeService

spring.datasource.url=jdbc:postgresql://localhost:5432/traffic
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=false

spring.jpa.hibernate.ddl-auto=none

server.port=8083

example.kafka.consumer-enabled=${consumer-enabled:true}
spring.kafka.bootstrap-servers=${kafka_bootstrap_servers:localhost:9092}
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'admin'} password=${kafka_password:'admin-secret'};
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.consumer.client-id=analyze-producer
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.retries=2
spring.kafka.jaas.enabled=true
spring.kafka.listener.poll-timeout=1800000
spring.kafka.listener.concurrency=1
spring.kafka.listener.ack-mode=manual_immediate
